{"ast":null,"code":"var _jsxFileName = \"/Users/hellevete/Documents/sagaruiv2/latspacefrontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { mockUsers } from '../utils/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('currentUser');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const login = (username, password) => {\n    const foundUser = mockUsers.find(u => u.username === username && u.password === password);\n    if (foundUser) {\n      const {\n        password: _,\n        ...userWithoutPassword\n      } = foundUser;\n      setUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"+8RKM5De0+n6Xc5oVHxg1j18bgU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","mockUsers","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","savedUser","localStorage","getItem","JSON","parse","login","username","password","foundUser","find","u","_","userWithoutPassword","setItem","stringify","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hellevete/Documents/sagaruiv2/latspacefrontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { User } from '../types';\nimport { mockUsers } from '../utils/mockData';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => boolean;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(() => {\n    const savedUser = localStorage.getItem('currentUser');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  const login = (username: string, password: string): boolean => {\n    const foundUser = mockUsers.find(\n      (u) => u.username === username && u.password === password\n    );\n\n    if (foundUser) {\n      const { password: _, ...userWithoutPassword } = foundUser;\n      setUser(userWithoutPassword as User);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAE7E,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS9C,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,MAAM;IAClD,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAc;IAC7D,MAAMC,SAAS,GAAGtB,SAAS,CAACuB,IAAI,CAC7BC,CAAC,IAAKA,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,IAAII,CAAC,CAACH,QAAQ,KAAKA,QACnD,CAAC;IAED,IAAIC,SAAS,EAAE;MACb,MAAM;QAAED,QAAQ,EAAEI,CAAC;QAAE,GAAGC;MAAoB,CAAC,GAAGJ,SAAS;MACzDT,OAAO,CAACa,mBAA2B,CAAC;MACpCX,YAAY,CAACY,OAAO,CAAC,aAAa,EAAEV,IAAI,CAACW,SAAS,CAACF,mBAAmB,CAAC,CAAC;MACxE,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACe,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZnB,IAAI;IACJO,KAAK;IACLU,MAAM;IACNG,eAAe,EAAE,CAAC,CAACpB;EACrB,CAAC;EAED,oBAAOV,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC1B,GAAA,CAjCWF,YAAyC;AAAA6B,EAAA,GAAzC7B,YAAyC;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}